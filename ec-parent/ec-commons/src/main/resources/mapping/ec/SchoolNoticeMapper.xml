<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.imexue.ec.common.mapper.ec.SchoolNoticeMapper" >
  <resultMap id="BaseResultMap" type="cn.imexue.ec.common.model.SchoolNotice" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="school_id" property="schoolId" jdbcType="BIGINT" />
    <result column="class_id" property="classId" jdbcType="BIGINT" />
    <result column="is_to_all" property="isToAll" jdbcType="TINYINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="version_no" property="versionNo" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, school_id, class_id, is_to_all, title, content, teacher_id, create_time, is_delete, 
    delete_time,version_no
  </sql>
   
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_school_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="delete" parameterType="java.lang.Long" >
    delete from t_school_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
   
  
  <insert id="insert" parameterType="cn.imexue.ec.common.model.SchoolNotice" >
    insert into t_school_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="isToAll != null" >
        is_to_all,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=BIGINT},
      </if>
      <if test="isToAll != null" >
        #{isToAll,jdbcType=TINYINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
   
   
  <update id="updateByPrimaryKeySelective" parameterType="cn.imexue.ec.common.model.SchoolNotice" >
    update t_school_notice
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=BIGINT},
      </if>
      <if test="isToAll != null" >
        is_to_all = #{isToAll,jdbcType=TINYINT},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
         version_no = #{versionNo ,jdbcType=INTEGER}+1,
     </set>
    where id = #{id,jdbcType=BIGINT} and version_no = #{versionNo}
  </update>
	<sql id="Notice_Column_List" >
		a.id, a.school_id, a.class_id, a.is_to_all, a.title, a.content, a.teacher_id,a.version_no,
		a.create_time, IFNULL(tcnr.num, 0)   readNum, IFNULL(tcnra.num, 0)  totalNum,(SELECT count(1) from t_school_notice_class snc where snc.school_notice_id=a.id )  totalClass
 	</sql>
	<!-- 收/发信箱 -->
  	<select id="pageList" resultType="SchoolNoticeVo">
		SELECT  <include refid="Notice_Column_List" />
		
		FROM t_school_notice a
		
		LEFT JOIN t_school_notice_receiver snrp ON snrp.school_notice_id = a.id
		
		LEFT JOIN ( 	SELECT 	count(id) AS num, 	school_notice_id FROM t_school_notice_receiver
		WHERE 	school_notice_id IN ( SELECT id 	FROM 	t_school_notice )
		AND is_read = 1 GROUP BY 	school_notice_id ) tcnr ON (tcnr.school_notice_id = a.id)
	 	LEFT JOIN ( SELECT count(id) AS num , school_notice_id,receiver_id
		FROM 	t_school_notice_receiver 	WHERE 	school_notice_id IN ( 	SELECT 	id FROM 	t_school_notice )
		GROUP BY school_notice_id ) tcnra ON ( 	tcnra.school_notice_id = a.id )
		WHERE a.is_delete=0
			<if test="schoolId != null">
		AND a.school_id = #{schoolId}
		</if>
		<if test="receiverId != null">
		AND snrp.receiver_id = #{receiverId}
		</if>
		 
	   <if test="teacherId != null">
		AND a.teacher_id = #{teacherId}
		</if>
		<if test="title != null">
		AND a.title like concat('%',#{title},'%')
 		</if>
 		<if test="startDate != null">
		<![CDATA[  and  date_format(a.create_time,'%Y%m%d')  >= date_format(#{startDate},'%Y%m%d')  ]]>
 		</if>
		<if test="endDate != null">
		<![CDATA[  and date_format(a.create_time,'%Y%m%d')   <= date_format(#{endDate},'%Y%m%d') ]]>
  		</if>
  		GROUP BY a.id
 		ORDER BY ${orderBy} ${orderType}
	</select>
	
	
	
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.imexue.ec.common.mapper.ec.SchoolNoticeReceiverMapper" >
  <resultMap id="BaseResultMap" type="cn.imexue.ec.common.model.SchoolNoticeReceiver" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="school_id" property="schoolId" jdbcType="BIGINT" />
    <result column="school_notice_id" property="schoolNoticeId" jdbcType="BIGINT" />
    <result column="receiver_role" property="receiverRole" jdbcType="VARCHAR" />
    <result column="receiver_id" property="receiverId" jdbcType="BIGINT" />
    <result column="receiver_name" property="receiverName" jdbcType="VARCHAR" />
    <result column="is_read" property="isRead" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="version_no" property="versionNo" jdbcType="TINYINT" />
  </resultMap>
   
  <sql id="Base_Column_List" >
    id, school_id, school_notice_id, receiver_role, receiver_id, receiver_name, is_read, 
    create_time,version_no
  </sql>
   <sql id="Teacher_Column_List" >
    	snr.id, snr.school_id, snr.school_notice_id, snr.receiver_role, snr.receiver_id, snr.receiver_name,
	snr.is_read, snr.create_time, t.mobile
  	</sql>
  	<sql id="Parent_Column_List" >
    	snr.id, snr.school_id, snr.school_notice_id, snr.receiver_role, snr.receiver_id, snr.receiver_name,
	snr.is_read, snr.create_time, p.mobile
  	</sql>
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_school_notice_receiver
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 根据通知ID和接收人获取 -->
   <select id="getByNoticeIdAndUid" resultMap="BaseResultMap"   >
    select 
    <include refid="Base_Column_List" />
    from t_school_notice_receiver
    where school_id = #{schoolId,jdbcType=BIGINT} and school_notice_id = #{schoolNoticeId,jdbcType=BIGINT} and receiver_id = #{receiverId,jdbcType=BIGINT} 
    and is_read=0 and receiver_role= #{role,jdbcType=VARCHAR}
  </select>
  
  <!--  查看是否已读的通知（老师和家长）  -->  
  <select id="getBySchoolNoticeIdAndIsRead" resultType="SchoolNoticeReceiverVo"  >
   
    select 
    <include refid="Teacher_Column_List" />
    from t_school_notice_receiver snr LEFT JOIN t_teacher t on t.id=snr.receiver_id 
    where  school_id= #{schoolId,jdbcType=BIGINT}  
    and  school_notice_id = #{schoolNoticeId,jdbcType=BIGINT} 
    and  is_read = #{isRead,jdbcType=TINYINT}
    and receiver_role='T'
    union all
    select 
    <include refid="Parent_Column_List" />
    from t_school_notice_receiver snr LEFT JOIN t_parent p on p.id=snr.receiver_id 
    where  school_id= #{schoolId,jdbcType=BIGINT}  
    and  school_notice_id = #{schoolNoticeId,jdbcType=BIGINT} 
    and  is_read = #{isRead,jdbcType=TINYINT}
     and receiver_role='P'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_school_notice_receiver
    where id = #{id,jdbcType=BIGINT}
  </delete>
   
  <insert id="insert" parameterType="cn.imexue.ec.common.model.SchoolNoticeReceiver" >
    insert into t_school_notice_receiver (id, school_id, school_notice_id, 
      receiver_role, receiver_id, receiver_name, 
      is_read, create_time)
    values (#{id,jdbcType=BIGINT}, #{schoolId,jdbcType=BIGINT}, #{schoolNoticeId,jdbcType=BIGINT}, 
      #{receiverRole,jdbcType=VARCHAR}, #{receiverId,jdbcType=BIGINT}, #{receiverName,jdbcType=VARCHAR}, 
      #{isRead,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.imexue.ec.common.model.SchoolNoticeReceiver" >
    insert into t_school_notice_receiver
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="schoolNoticeId != null" >
        school_notice_id,
      </if>
      <if test="receiverRole != null" >
        receiver_role,
      </if>
      <if test="receiverId != null" >
        receiver_id,
      </if>
      <if test="receiverName != null" >
        receiver_name,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="schoolNoticeId != null" >
        #{schoolNoticeId,jdbcType=BIGINT},
      </if>
      <if test="receiverRole != null" >
        #{receiverRole,jdbcType=VARCHAR},
      </if>
      <if test="receiverId != null" >
        #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="receiverName != null" >
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="cn.imexue.ec.common.model.SchoolNoticeReceiver" >
    update t_school_notice_receiver
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="schoolNoticeId != null" >
        school_notice_id = #{schoolNoticeId,jdbcType=BIGINT},
      </if>
      <if test="receiverRole != null" >
        receiver_role = #{receiverRole,jdbcType=VARCHAR},
      </if>
      <if test="receiverId != null" >
        receiver_id = #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="receiverName != null" >
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
          version_no = #{versionNo ,jdbcType=INTEGER}+1
     </set>
    	where id = #{id,jdbcType=BIGINT} and version_no = #{versionNo}
  </update>
   
</mapper>